<Page
    x:Class="OiM_UWP.Views.KnapsackView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:OiM_UWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{x:Null}">

    <Grid Width="Auto" Height="Auto">
      <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="200" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0" Background="{ThemeResource AppBarBackgroundThemeBrush}">
          <Grid.RowDefinitions>
            <RowDefinition Height="200" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>
            <Grid Grid.Row="0">
              <Grid.Transitions>
                <TransitionCollection>
                  <EntranceThemeTransition FromHorizontalOffset="100" />

                </TransitionCollection>
              </Grid.Transitions>
                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Text="Problem Plecakowy" FontSize="24" Height="Auto"
                         Width="Auto" Margin="10,10,-10,-10" UseLayoutRounding="False" d:LayoutRounding="Auto">
              </TextBlock>
              <TextBlock  Margin="15,40,15,0" TextWrapping="Wrap">Dyskretny problem plecakowy (ang. discrete knapsack problem) jest jednym z najczęściej poruszanych problemów optymalizacyjnych. Nazwa zagadnienia pochodzi od maksymalizacyjnego problemu wyboru przedmiotów, tak by ich sumaryczna wartość była jak największa i jednocześnie mieściły się w plecaku. Przy podanym zbiorze elementów o podanej wadze i wartości, należy wybrać taki podzbiór by suma wartości była możliwie jak największa, a suma wag była nie większa od danej pojemności plecaka.</TextBlock>
            </Grid>
          <Grid Margin="0,174,0,0" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="300" />
                </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="150" />
                </Grid.ColumnDefinitions>
                <ScrollViewer Grid.Column="0" Grid.Row="0" Margin="5" VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto">
                    <Grid x:Name="matrixGrid" Background="{ThemeResource SystemAccentColor}" Visibility="Collapsed" Padding="2">
                      <Grid.ChildrenTransitions>
                        <TransitionCollection>
                          <EntranceThemeTransition 
                            FromVerticalOffset="200"/>
                        </TransitionCollection>
                      </Grid.ChildrenTransitions>
                    </Grid>
                </ScrollViewer>

                <Grid Grid.Column="0" Grid.Row="1" x:Name="resultGridGreedy" Height="50" Margin="5" VerticalAlignment="Top"
              Background="{ThemeResource SystemAccentColor}" Visibility="Collapsed">
                    <TextBlock x:Name="resultGreedyTextBlock" HorizontalAlignment="Center" VerticalAlignment="Top" Text="x" />
                    <TextBlock x:Name="resultGreedySumTextBlock" HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="x" />
                </Grid>

                <Grid Grid.Column="0" Grid.Row="1" x:Name="resultGridDynamic" Height="50" Margin="5,60,5,5" VerticalAlignment="Top"
                  Background="{ThemeResource SystemAccentColor}" Visibility="Collapsed">
              <TextBlock x:Name="resultDynamicTextBlock" HorizontalAlignment="Center" VerticalAlignment="Top" Text="x" />
              <TextBlock x:Name="resultDynamicSumTextBlock" HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="x" />
                </Grid>
            </Grid>

        </Grid>
        <ScrollViewer Grid.Column="1" Background="{ThemeResource SystemAccentColor}">

            <StackPanel Orientation="Vertical">

                <ListViewHeaderItem Content="Ustawienia" />
                <StackPanel>

                    <Button Click="openFileAsync" Style="{ThemeResource ButtonRevealStyle}" Width="200" Margin="0,2">
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="OpenFile" />
                            <TextBlock Text="Otwórz Plik" Margin="10" />
                        </StackPanel>
                    </Button>
                    <Button Click="saveFileAsync" Style="{ThemeResource ButtonRevealStyle}" Width="200" Margin="0,2">
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="Save" />
                            <TextBlock Text="Zapisz Plik" Margin="10" />
                        </StackPanel>
                    </Button>
                    <Button Style="{ThemeResource ButtonRevealStyle}" Width="200" Margin="0,2" Click="Generate">
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="RepeatAll" />
                            <TextBlock Text="Generuj" Margin="10" />
                        </StackPanel>
                    </Button>

                    <Button Click="calculateMatrixGreedy" Style="{ThemeResource ButtonRevealStyle}" Width="200" Margin="0,2">
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="Calculator" />
                            <TextBlock Text="Licz Zachłanną" Margin="10" />
                        </StackPanel>
                    </Button>

                  <Button Click="calculateMatrixDynamic" Style="{ThemeResource ButtonRevealStyle}" Width="200" Margin="0,2">
                    <StackPanel Orientation="Horizontal">
                      <SymbolIcon Symbol="Calculator" />
                      <TextBlock Text="Licz Dynamiczną" Margin="10" />
                    </StackPanel>
                  </Button>
                </StackPanel>
                <ListViewHeaderItem Content="Konfiguracja" />
                <TextBox x:Name="itemsNumberTextBox" Header="Liczba przedmiotów:" PlaceholderText="ilość" Margin="10,10,10,0"
                 InputScope="Number" />
                <TextBox x:Name="capacityTextBox" Header="Pojemność:" PlaceholderText="pojemość" Margin="10,10,10,0"
                         InputScope="Number" />
                <CheckBox x:Name="randomCheckBox" Content="Losowo" Margin="10,10,10,0" />
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
